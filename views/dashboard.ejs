<!DOCTYPE HTML>
<html>
<head>
<% include ../public/include/mainHeader.html %>

<style>
body {
	font: 10px arial;
}

tr, th, td {
	border: 1px solid #d6d6d6;
	vertical-align: middle;
	background-color: white;
}

th {
	text-align: center;
}

.t1 {
	width: 50px;
}

#curTime {
	color: whilte;
	font-size:15px;
}
</style>
<script>
$(document).ready( ()=>{
	createGauges();
	updateGauges();
	setInterval(updateGauges,10000);
})
</script>
</head>
<body>

	<!-- Header -->
	<% include ../public/include/pageHeader.html %>

	<article>
		<div class="w3-row">
			<br/>
			<button class="w3-button w3-block w3-light-grey" id='curTime'>현재시각미세먼지</button>
			<br/>
		</div>
		<div class="w3-row w3-center">
			<span class="w3-col m3 l3" id="pm25_01GaugeContainer"></span>
			<span class="w3-col m3 l3" id="pm25_25GaugeContainer"></span>
			<span class="w3-col m3 l3" id="pm25_10GaugeContainer"></span>
			<span class="w3-col m3 l3" id="ds_tempGaugeContainer"></span>
		</div>
	</article>
	<article class="w3-padding-15 w3-center">
		<div class="w3-container"><% include info_tview.ejs %></div>
	</article>
	<br/><br/>
	<footer  class="w3-container w3-blue w3-center">
		<% include ../public/include/pageFooter.html %></div>
	</footer>
</body>
<script>
	var gauges = [];
	var boolCreate = false ;
	function createGauge(name, label, min, max) {
		var config = {
			size : 220,
			label : label,
			min : undefined != min ? min : 0,
			max : undefined != max ? max : 100,
			minorTicks : 5
		}

		var range = config.max - config.min;
		config.yellowZones = [ {
			from : config.min + range * 0.75,
			to : config.min + range * 0.9
		} ];
		config.redZones = [ {
			from : config.min + range * 0.9,
			to : config.max
		} ];

		gauges[name] = new Gauge(name + "GaugeContainer", config);
		gauges[name].render();
		
	}

	function createGauges() {
		createGauge("pm25_01", "초미세(0.1): ㎍/㎥", 0, 80);
		createGauge("pm25_25", "미세(2.5): ㎍/㎥", 0, 100);
		createGauge("pm25_10", "황사급(10): ㎍/㎥", 0, 150);
		createGauge("ds_temp", "기온 ℃", 0, 50);
		
		boolCreate = true;
	}

	// 게이지 다시그리기
	function updateGauges() {
		$.ajax({

			type : 'GET',
			url : '/pm25/getlast',
			dataType : 'json',
			success : function(data) {
				if (data) {
					gauges['pm25_01'].redraw(data.PM25_01);
					gauges['pm25_10'].redraw(data.PM25_10);
					gauges['pm25_25'].redraw(data.PM25_25);
					gauges['ds_temp'].redraw(data.DS_TEMP);
					$(curTime).text(
							data.PM25_DATE + ',' + data.PM25_TIME
									+ ' 현재 미세먼지, 온도 현황');

					// 배경색 초기화
					$(".pm25_1").css("background-color", "white");
					$(".pm25_2").css("background-color", "white");
					$(".pm25_3").css("background-color", "white");
					$(".pm25_4").css("background-color", "white");
					
					// 측정 값에 따라 배경색 선택
					if (data.PM25_25 < 16)
						$(".pm25_1").css("background-color", "#33FF66");
					else if (data.PM25_25 < 51)
						$(".pm25_2").css("background-color", "#FFFF66");
					else if (data.PM25_25 < 101)
						$(".pm25_3").css("background-color", "#FF6633");
					else
						$(".pm25_4").css("background-color", "red");

					if (data.PM25_10 < 31)
						$(".pm10_1").css("background-color", "#33FF66");
					else if (data.PM25_10 < 81)
						$(".pm10_2").css("background-color", "#FFFF66");
					else if (data.PM25_10 < 151)
						$(".pm10_3").css("background-color", "#FF6633");
					else
						$(".pm10_4").css("background-color", "red");

				}
			}
		})
	}
</script>
<script src="/d3js/d3.min.js"></script>
<script src="/d3js/gauge.js"></script>
</html>